# Generated by Django 2.0.4 on 2018-07-10 08:28

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Association',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=128, verbose_name='社团名称')),
                ('introduction', models.TextField(verbose_name='简介')),
                ('created', models.BooleanField(default=False, verbose_name='是否已创建')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('credit', models.IntegerField(default=100, verbose_name='信用点数')),
            ],
            options={
                'verbose_name': '社团',
                'verbose_name_plural': '社团',
                'db_table': 'association',
            },
        ),
        migrations.CreateModel(
            name='BulletinApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=32, verbose_name='申请标题')),
                ('content', models.TextField(verbose_name='申请内容')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('result', models.IntegerField(choices=[(0, '待审核'), (1, '审核通过'), (2, '审核未通过')], default=0, verbose_name='审核结果')),
                ('suggestion', models.TextField(verbose_name='审核意见')),
                ('reviewTime', models.DateTimeField(auto_now=True, verbose_name='审核时间')),
                ('bulletinMessage', models.TextField()),
            ],
            options={
                'verbose_name': '公告发布申请',
                'verbose_name_plural': '公告发布申请',
                'db_table': 'bulletin_app',
            },
        ),
        migrations.CreateModel(
            name='EventApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=32, verbose_name='申请标题')),
                ('content', models.TextField(verbose_name='申请内容')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('result', models.IntegerField(choices=[(0, '待审核'), (1, '审核通过'), (2, '审核未通过')], default=0, verbose_name='审核结果')),
                ('suggestion', models.TextField(verbose_name='审核意见')),
                ('reviewTime', models.DateTimeField(auto_now=True, verbose_name='审核时间')),
                ('official', models.BooleanField(choices=[(False, '非官方'), (True, '官方')], default=False, verbose_name='是否为校方举办')),
                ('fromTime', models.DateTimeField(verbose_name='开始时间')),
                ('toTime', models.DateTimeField(verbose_name='结束时间')),
                ('confirmHeld', models.BooleanField(choices=[(False, '未举办'), (True, '已举办')], verbose_name='是否已举办')),
                ('holdingTime', models.DateTimeField(verbose_name='实际举办时间')),
                ('useLocation', models.BooleanField(choices=[(False, '使用其他地点'), (True, '使用校内地点')], default=True, verbose_name='使用校内地点')),
            ],
            options={
                'verbose_name': '活动申请',
                'verbose_name_plural': '活动申请',
                'db_table': 'event_app',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='地点名')),
                ('where', models.TextField(max_length=128, verbose_name='具体位置')),
            ],
            options={
                'verbose_name': '地点',
                'verbose_name_plural': '地点',
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='LocationApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=32, verbose_name='申请标题')),
                ('content', models.TextField(verbose_name='申请内容')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('result', models.IntegerField(choices=[(0, '待审核'), (1, '审核通过'), (2, '审核未通过')], default=0, verbose_name='审核结果')),
                ('suggestion', models.TextField(verbose_name='审核意见')),
                ('reviewTime', models.DateTimeField(auto_now=True, verbose_name='审核时间')),
                ('fromTime', models.DateTimeField(verbose_name='开始时间')),
                ('toTime', models.DateTimeField(verbose_name='结束时间')),
                ('shareLocation', models.BooleanField(choices=[(False, '独占'), (True, '共用')], default=False, verbose_name='共用地点')),
                ('location', models.ForeignKey(db_column='location', on_delete=django.db.models.deletion.DO_NOTHING, related_name='location', to='AssocMgnt.Location', verbose_name='地点')),
            ],
            options={
                'verbose_name': '场所申请',
                'verbose_name_plural': '场所申请',
                'db_table': 'location_app',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='姓名')),
                ('tel', models.CharField(max_length=48, verbose_name='联系电话')),
                ('association', models.ForeignKey(db_column='association', on_delete=django.db.models.deletion.CASCADE, related_name='association', to='AssocMgnt.Association', verbose_name='社团')),
            ],
            options={
                'verbose_name': '成员列表',
                'verbose_name_plural': '成员列表',
                'db_table': 'member',
            },
        ),
        migrations.CreateModel(
            name='RegistrationApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=32, verbose_name='申请标题')),
                ('content', models.TextField(verbose_name='申请内容')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('result', models.IntegerField(choices=[(0, '待审核'), (1, '审核通过'), (2, '审核未通过')], default=0, verbose_name='审核结果')),
                ('suggestion', models.TextField(verbose_name='审核意见')),
                ('reviewTime', models.DateTimeField(auto_now=True, verbose_name='审核时间')),
                ('association', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='register_assoc', to='AssocMgnt.Association', verbose_name='申请注册社团')),
            ],
            options={
                'verbose_name': '社团注册申请',
                'verbose_name_plural': '社团注册申请',
                'db_table': 'registration_app',
            },
        ),
        migrations.CreateModel(
            name='StuffPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_perm', models.BooleanField(default=False, verbose_name='注册审核权')),
                ('event_perm', models.BooleanField(default=False, verbose_name='活动审核权')),
                ('location_perm', models.BooleanField(default=False, verbose_name='场所审核权')),
                ('bulletin_perm', models.BooleanField(default=False, verbose_name='公告审核权')),
            ],
            options={
                'verbose_name': '教务员工权限',
                'verbose_name_plural': '教务员工权限',
                'db_table': 'perm',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('realName', models.CharField(max_length=32, verbose_name='真实姓名')),
                ('role', models.IntegerField(choices=[(0, '创立者'), (1, '教务员工'), (2, '系统管理员')], verbose_name='角色')),
                ('tel', models.CharField(max_length=48, verbose_name='联系电话')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='注册时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='stuffpermission',
            name='staff',
            field=models.ForeignKey(db_column='staff', on_delete=django.db.models.deletion.CASCADE, related_name='staff', to=settings.AUTH_USER_MODEL, verbose_name='教务员工'),
        ),
        migrations.AddField(
            model_name='registrationapplication',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assocmgnt_registrationapplication_reviewer', to=settings.AUTH_USER_MODEL, verbose_name='审核人'),
        ),
        migrations.AddField(
            model_name='registrationapplication',
            name='starterAssociation',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='AssocMgnt.Association', verbose_name='申请社团'),
        ),
        migrations.AddField(
            model_name='registrationapplication',
            name='starterUser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assocmgnt_registrationapplication_starter_user', to=settings.AUTH_USER_MODEL, verbose_name='申请人'),
        ),
        migrations.AddField(
            model_name='locationapplication',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assocmgnt_locationapplication_reviewer', to=settings.AUTH_USER_MODEL, verbose_name='审核人'),
        ),
        migrations.AddField(
            model_name='locationapplication',
            name='starterAssociation',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='AssocMgnt.Association', verbose_name='申请社团'),
        ),
        migrations.AddField(
            model_name='locationapplication',
            name='starterUser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assocmgnt_locationapplication_starter_user', to=settings.AUTH_USER_MODEL, verbose_name='申请人'),
        ),
        migrations.AddField(
            model_name='eventapplication',
            name='locationApplication',
            field=models.ForeignKey(db_column='loc_app', default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='loc_app', to='AssocMgnt.LocationApplication', verbose_name='场所使用申请'),
        ),
        migrations.AddField(
            model_name='eventapplication',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assocmgnt_eventapplication_reviewer', to=settings.AUTH_USER_MODEL, verbose_name='审核人'),
        ),
        migrations.AddField(
            model_name='eventapplication',
            name='starterAssociation',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='AssocMgnt.Association', verbose_name='申请社团'),
        ),
        migrations.AddField(
            model_name='eventapplication',
            name='starterUser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assocmgnt_eventapplication_starter_user', to=settings.AUTH_USER_MODEL, verbose_name='申请人'),
        ),
        migrations.AddField(
            model_name='bulletinapplication',
            name='reviewer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='assocmgnt_bulletinapplication_reviewer', to=settings.AUTH_USER_MODEL, verbose_name='审核人'),
        ),
        migrations.AddField(
            model_name='bulletinapplication',
            name='starterAssociation',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='AssocMgnt.Association', verbose_name='申请社团'),
        ),
        migrations.AddField(
            model_name='bulletinapplication',
            name='starterUser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assocmgnt_bulletinapplication_starter_user', to=settings.AUTH_USER_MODEL, verbose_name='申请人'),
        ),
        migrations.AddField(
            model_name='association',
            name='founder',
            field=models.ForeignKey(db_column='founder', on_delete=django.db.models.deletion.CASCADE, related_name='founder', to=settings.AUTH_USER_MODEL, verbose_name='创立者'),
        ),
        migrations.AddField(
            model_name='association',
            name='parent',
            field=models.ForeignKey(db_column='parent_assoc', on_delete=django.db.models.deletion.DO_NOTHING, related_name='parent_assoc', to='AssocMgnt.Association', verbose_name='父级社团'),
        ),
    ]
